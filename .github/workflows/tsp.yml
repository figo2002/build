on:
  push:
    paths:
      - 'version/tsp'

name: tsp
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set variables
        run: |
          echo "GOLANG=$(wget -qO- https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep 'version' | cut -d\" -f4 | head -1)" >> $GITHUB_ENV
          echo "VERSION=$(cat "version/tsp" | head -n1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash

      - name: Install Golang
        uses: actions/setup-go@v2
        with: 
          go-version: ${{ env.GOLANG }}

      - name: Start build
        run: |
          cp src/build/tsp.sh $PWD/tsp.sh && chmod +x tsp.sh && ./tsp.sh

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            ./release/*
  
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup variables
        run: |
          echo "VERSION=$(cat "version/tsp" | head -n1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build latest
        run: |
          cd src/tsp
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/tls-shunt-proxy:latest" \
          --file Dockerfile .
           
      - name: Build tag
        run: |
          cd src/tsp
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/tls-shunt-proxy:${{ env.VERSION }}" \
          --file Dockerfile .
           
  test:
     needs: push
     runs-on: ubuntu-latest
     steps:
       
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup variables
        run: |
          echo "VERSION=$(cat "version/tsp" | head -n1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash

      - name: Test Docker image
        run: |
          docker run --rm --entrypoint /usr/bin/tsp ${{ secrets.DOCKER_USERNAME }}/tls-shunt-proxy:latest --help
          docker run --rm --entrypoint /usr/bin/tsp ${{ secrets.DOCKER_USERNAME }}/tls-shunt-proxy:${{ env.VERSION }} --help
