on:
  push:
    paths:
      - 'version/naive'

name: naive-build
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Golang
        uses: actions/setup-go@v2
        with: 
         go-version: 1.15.x

      - name: Setup variables
        run: |
          echo "VERSION=$(cat "version/naive" | head -1 | tr -d [:space:])" >> $GITHUB_ENV
          echo "GOPATH=$(dirname $GITHUB_WORKSPACE)" >> $GITHUB_ENV
          echo "$(dirname $GITHUB_WORKSPACE)/bin" >> $GITHUB_PATH
        shell: bash

      - name: Start build
        run: |
          cp src/build/caddy.sh $PWD/caddy.sh && chmod +x caddy.sh && ./caddy.sh

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            ./release/*

  push-json:
    needs: build
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup variables
        run: |
          echo "VERSION=$(cat "version/naive" | head -1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build latest
        run: |
          cd src/naive-json
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/naiveproxy:latest" \
          --file Dockerfile .
           
      - name: Build tag
        run: |
          cd src/naive-json
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/naiveproxy:${{ env.VERSION }}" \
          --file Dockerfile .

  push-file:
     needs: [build,push-json]
     runs-on: ubuntu-latest
     steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup variables
        run: |
          echo "VERSION=$(cat "version/naive" | head -1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build latest
        run: |
          cd src/naive-file
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/naiveproxy2:latest" \
          --file Dockerfile .
           
      - name: Build tag
        run: |
          cd src/naive-file
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/naiveproxy2:${{ env.VERSION }}" \
          --file Dockerfile .
   
  test:
    needs: [push-json,push-file]
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup variables
        run: |
          echo "VERSION=$(cat "version/naive" | head -1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash

      - name: Test Docker image
        run: |
          docker run --rm --entrypoint /usr/bin/caddy ${{ secrets.DOCKER_USERNAME }}/naiveproxy:latest version
          docker run --rm --entrypoint /usr/bin/caddy ${{ secrets.DOCKER_USERNAME }}/naiveproxy:${{ env.VERSION }} version
          docker run --rm --entrypoint /usr/bin/caddy ${{ secrets.DOCKER_USERNAME }}/naiveproxy2:latest version
          docker run --rm --entrypoint /usr/bin/caddy ${{ secrets.DOCKER_USERNAME }}/naiveproxy2:${{ env.VERSION }} version
