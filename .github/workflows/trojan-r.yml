on:
  push:
    paths:
      - 'version/trojan-r'

name: trojan-r-build
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set env
        run: |
          echo "VERSION=$(cat "version/trojan-r" | head -n1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash
      
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt,clippy,rls

      - name: Prepare
        run: |
          sudo apt install -y git wget gcc g++ make automake musl-tools
          cargo install cross
          rustup target add i686-unknown-linux-musl
          rustup target add x86_64-unknown-linux-musl
          rustup target add arm-unknown-linux-musleabihf
          rustup target add armv7-unknown-linux-musleabihf
          rustup target add aarch64-unknown-linux-musl
          
      - name: Build
        run: |
          git clone https://github.com/p4gefau1t/trojan-r.git && cd trojan-r
          cross build --target i686-unknown-linux-musl --release
          make x86_64-unknown-linux-musl
          make arm-unknown-linux-musleabihf
          make armv7-unknown-linux-musleabihf
          make aarch64-unknown-linux-musl
          
      - name: Copy the files
        run: |
          mkdir release
          cp trojan-r/target/i686-unknown-linux-musl/release/trojan-r release/trojan-r-linux-386 && strip -s release/trojan-r-linux-386
          cp trojan-r/target/x86_64-unknown-linux-musl/release/trojan-r release/trojan-r-linux-amd64 && strip -s release/trojan-r-linux-amd64
          cp trojan-r/target/arm-unknown-linux-musleabihf/release/trojan-r release/trojan-r-linux-arm32-v6
          cp trojan-r/target/armv7-unknown-linux-musleabihf/release/trojan-r release/trojan-r-linux-arm32-v7
          cp trojan-r/target/aarch64-unknown-linux-musl/release/trojan-r release/trojan-r-linux-arm64
       
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            ./release/*
            
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set env
        run: |
          echo "VERSION=$(cat "version/trojan-r" | head -n1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build latest
        run: |
          cd src/trojan-r
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/trojan-r:latest" \
          --file Dockerfile .
           
      - name: Build tag
        run: |
          cd src/trojan-r
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/trojan-r:${{ env.VERSION }}" \
          --file Dockerfile .
           
  test:
     needs: [build,push]
     runs-on: ubuntu-latest
     steps:
       
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup variables
        run: |
          echo "VERSION=$(cat "version/trojan-r" | head -n1 | tr -d [:space:])" >> $GITHUB_ENV
        shell: bash

      - name: Test Docker image
        run: |
          docker run --rm --entrypoint /usr/bin/trojan-r ${{ secrets.DOCKER_USERNAME }}/trojan-r:latest --version
          docker run --rm --entrypoint /usr/bin/trojan-r ${{ secrets.DOCKER_USERNAME }}/trojan-r:${{ env.VERSION }} --version
